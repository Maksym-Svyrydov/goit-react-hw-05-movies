{"version":3,"file":"static/js/158.030465cf.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAmB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,mCAAsCC,IAD1B,cAC3BE,EAD2B,yBAE1BA,EAAOC,MAFmB,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBK,EADtB,+CADW,cAC1BH,EAD0B,yBAIzBA,EAAOC,KAAKG,SAJa,2CAAH,sDAMlBC,EAAc,mCAAG,WAAMC,GAAN,uFACPT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACIR,EADJ,oBADO,cACtBE,EADsB,yBAIrBA,EAAOC,MAJc,2CAAH,sDAMdM,EAAY,mCAAG,WAAMD,GAAN,yFACHT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,2BADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,EAAKG,SAJc,2CAAH,sDAMZI,EAAS,mCAAG,WAAMC,GAAN,yFACAZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACeX,EADf,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,EAAKS,MAJW,2CAAH,qD,mGC7BTC,EAAOC,EAAAA,GAAAA,GAAH,8DAIJC,EAAOD,EAAAA,GAAAA,GAAH,2DAIJE,EAAMF,EAAAA,GAAAA,IAAH,qF,SCWhB,EAjBmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,SAACN,EAAD,UACGI,EAAOG,KAAI,SAAAC,GAAK,OACf,SAACN,EAAD,WACE,SAAC,KAAD,CAAMO,GAAE,kBAAaD,EAAMb,IAAMe,MAAO,CAAEC,KAAMN,GAAhD,SACGG,EAAMI,cACL,SAACT,EAAD,CAAKU,IAAG,UAVJ,mCAUqBL,EAAMI,aAAeE,IAAKN,EAAMO,WAHpDP,EAAMb,GADF,KAWtB,C,6IClBYqB,EAAYf,EAAAA,GAAAA,IAAH,qEAITgB,EAAOhB,EAAAA,GAAAA,KAAH,6EAKJiB,EAAQjB,EAAAA,GAAAA,MAAH,+CAGLkB,EAASlB,EAAAA,GAAAA,OAAH,sP,SCmCnB,EA1Ce,WACb,OAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOhB,EAAP,KAAeiB,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc8B,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAsBA,OARAC,EAAAA,EAAAA,YAAU,WAAO,IAAD,EACRlC,EAAK,UAAGgC,EAAaG,IAAI,gBAApB,QAAgC,GACvCnC,IAAU,CAAC,IAGfD,EAAAA,EAAAA,IAAmBC,GAAOoC,KAAKP,EAChC,GAAE,CAACG,KAGF,UAACR,EAAD,YACE,UAACC,EAAD,CAAMY,SAlBgB,SAAAC,GAExB,GADAA,EAAEC,iBACY,KAAVvC,EACF,OAAOiC,EAAgB,CAAC,GAE1BA,EAAgB,CAAEjC,MAAAA,GACnB,EAYG,WACE,SAAC0B,EAAD,CACEc,KAAK,OACLC,KAAK,SACLC,YAAY,sBACZC,SA3BiB,SAAAL,GACvBR,EAASQ,EAAEM,OAAOC,MACnB,EA0BOA,MAAO7C,KAGT,SAAC2B,EAAD,CAAQa,KAAK,SAAb,6BAEF,SAAC,IAAD,CAAY5B,OAAQA,MAGzB,C","sources":["API/AxiosAPI.js","components/MovieList.styled.js","components/MovieList.jsx","pages/Movies.styled.js","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '66d85cdc98fdcbda260546142accdb60';\n// const PAGE = '1';\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios.get(`trending/all/day?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return result.data.results;\n};\nexport const fetchMovieById = async id => {\n  const result = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return result.data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n","import styled from 'styled-components';\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n`;\nexport const Item = styled.li`\n  list-style: none;\n  gap: 10px;\n`;\nexport const Img = styled.img`\n  width: 150px;\n  margin: 5px 10px;\n  border-radius: 6px;\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { List, Item, Img } from '../components/MovieList.styled';\nconst PosterUrl = 'https://image.tmdb.org/t/p/w500/';\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.map(movie => (\n        <Item key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.poster_path && (\n              <Img src={`${PosterUrl + movie.poster_path}`} alt={movie.title} />\n            )}\n          </Link>\n        </Item>\n      ))}\n    </List>\n  );\n};\nexport default MoviesList;\n","import styled from 'styled-components';\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\nexport const Form = styled.form`\n  display: flex;\n  gap: 5px;\n  padding: 5px 10px;\n`;\nexport const Input = styled.input`\n  border-radius: 4px;\n`;\nexport const Button = styled.button`\n  padding: 4px;\n  font-weight: 400px;\n  min-width: 100px;\n  min-height: 32px;\n  border-radius: 4px;\n  cursor: pointer;\n  &:hover {\n    background-color: #cfd8dc;\n    font-weight: 800px;\n    font-size: 17px;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieBySearch } from '../API/AxiosAPI';\nimport MoviesList from '../components/MovieList';\nimport { Container, Form, Input, Button } from '../pages/Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [query, setQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleInputSearh = e => {\n    setQuery(e.target.value);\n  };\n\n  const handleInputSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      return setSearchParams({});\n    }\n    setSearchParams({ query });\n  };\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (query === {}) {\n      return;\n    }\n    fetchMovieBySearch(query).then(setMovies);\n  }, [searchParams]);\n\n  return (\n    <Container>\n      <Form onSubmit={handleInputSubmit}>\n        <Input\n          type=\"text\"\n          name=\"search\"\n          placeholder=\"Search your film :)\"\n          onChange={handleInputSearh}\n          value={query}\n        />\n\n        <Button type=\"submit\">Search film</Button>\n      </Form>\n      <MoviesList movies={movies} />\n    </Container>\n  );\n};\nexport default Movies;\n"],"names":["axios","API_KEY","fetchTrendingMovies","result","data","fetchMovieBySearch","query","results","fetchMovieById","id","fetchReviews","fetchCast","movieId","cast","List","styled","Item","Img","movies","location","useLocation","map","movie","to","state","from","poster_path","src","alt","title","Container","Form","Input","Button","useState","setMovies","setQuery","useSearchParams","searchParams","setSearchParams","useEffect","get","then","onSubmit","e","preventDefault","type","name","placeholder","onChange","target","value"],"sourceRoot":""}