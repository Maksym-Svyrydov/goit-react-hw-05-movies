{"version":3,"file":"static/js/840.9e7144d6.chunk.js","mappings":"8SAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzB,IAAMC,EAAU,mCAGHC,EAAmB,mCAAG,oGACZF,EAAAA,EAAAA,IAAA,sCAAyCC,IAD7B,cAC3BE,EAD2B,yBAE1BA,EAAOC,MAFmB,2CAAH,qDAKnBC,EAAkB,mCAAG,WAAMC,GAAN,uFACXN,EAAAA,EAAAA,IAAA,+BACKC,EADL,kBACsBK,EADtB,+CADW,cAC1BH,EAD0B,yBAIzBA,EAAOC,KAAKG,SAJa,2CAAH,sDAMlBC,EAAc,mCAAG,WAAMC,GAAN,uFACPT,EAAAA,EAAAA,IAAA,gBACVS,EADU,oBACIR,EADJ,oBADO,cACtBE,EADsB,yBAIrBA,EAAOC,MAJc,2CAAH,sDAMdM,EAAY,mCAAG,WAAMD,GAAN,yFACHT,EAAAA,EAAAA,IAAA,gBACZS,EADY,4BACUR,EADV,2BADG,uBAClBG,EADkB,EAClBA,KADkB,kBAInBA,EAAKG,SAJc,2CAAH,sDAMZI,EAAS,mCAAG,WAAMC,GAAN,yFACAZ,EAAAA,EAAAA,IAAA,gBACZY,EADY,4BACeX,EADf,oBADA,uBACfG,EADe,EACfA,KADe,kBAIhBA,EAAKS,MAJW,2CAAH,qD,uJC5BTC,EAAYC,EAAAA,GAAAA,IAAH,+CAGTC,EAASD,EAAAA,GAAAA,IAAH,6MAEf,IASSE,EAAWF,EAAAA,GAAAA,IAAH,+QAEjB,IAaSG,EAAQH,EAAAA,GAAAA,EAAH,kJAMd,IAESI,EAAUJ,EAAAA,GAAAA,IAAH,qIAKH,IAEJK,EAAkBL,EAAAA,GAAAA,IAAH,+LAExB,IASSM,EAAcN,EAAAA,GAAAA,IAAH,sHAGpB,IAISO,EAAOP,EAAAA,GAAAA,IAAH,iLAUJQ,EAAUR,EAAAA,GAAAA,IAAH,iL,SCapB,EAtEqB,WAAO,IAAD,IACzB,GAA0BS,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACQd,GAAYe,EAAAA,EAAAA,MAAZf,QAGFgB,GAAWC,EAAAA,EAAAA,MACXC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,oBAKpD,IAHAC,EAAAA,EAAAA,YAAU,YACR1B,EAAAA,EAAAA,IAAeI,GAASuB,MAAK,SAAAhC,GAAM,OAAIuB,EAASvB,EAAb,GACpC,IACIsB,EAIL,OACE,UAACX,EAAD,YACE,SAACE,EAAD,WACE,SAAC,KAAD,CACEoB,MAAO,CACLC,eAAgB,OAChBC,QAAS,QACTC,SAAU,WACVC,QAAS,OAEXC,GAAIX,EAAaY,QAPnB,wBAYF,SAACxB,EAAD,UAAQO,EAAMkB,SACd,UAAC1B,EAAD,YACE,SAACE,EAAD,CACEyB,IAAG,UAlCW,mCAkCYnB,EAAMoB,aAChCC,IAAKrB,EAAMkB,SAEb,UAACvB,EAAD,YACE,qCACA,uBAAIK,EAAMsB,kBAId,UAAC1B,EAAD,YACE,SAACC,EAAD,WACE,SAAC,KAAD,CACEc,MAAO,CACLC,eAAgB,QAElBI,GAAG,OACHT,MAAOJ,EAASI,MALlB,qBAUF,SAACT,EAAD,WACE,SAAC,KAAD,CACEa,MAAO,CACLC,eAAgB,QAElBI,GAAG,UACHT,MAAOJ,EAASI,MALlB,2BAWJ,SAAC,KAAD,MAGL,C","sources":["API/AxiosAPI.js","pages/MovieDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = '66d85cdc98fdcbda260546142accdb60';\n// const PAGE = '1';\n\nexport const fetchTrendingMovies = async () => {\n  const result = await axios.get(`trending/movie/week?api_key=${API_KEY}`);\n  return result.data;\n};\n\nexport const fetchMovieBySearch = async query => {\n  const result = await axios.get(\n    `search/movie?api_key=${API_KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n  );\n  return result.data.results;\n};\nexport const fetchMovieById = async id => {\n  const result = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return result.data;\n};\nexport const fetchReviews = async id => {\n  const { data } = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return data.results;\n};\nexport const fetchCast = async movieId => {\n  const { data } = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return data.cast;\n};\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  padding: 10px 40px;\n`;\nexport const GoBack = styled.div`\n  display: flex;\n  ${'' /* outline: 2px solid tomato; */}\n  width: 100px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  margin: 5px 10px;\n  padding: 4px;\n`;\nexport const FilmCard = styled.div`\n  display: flex;\n  ${'' /* outline: 2px solid tomato; */}\n  padding: 10px 10px;\n  border-bottom: 1px solid gray;\n\n  @media screen and (max-width: 647px) {\n     {\n      flex-wrap: wrap;\n      gap: 10px;\n      align-items: center;\n      justify-content: center;\n    }\n  }\n`;\nexport const Title = styled.p`\n  font-size: 24px;\n  font-weight: 700;\n  padding-left: 20px;\n  padding-top: 5px;\n  border-top: 2px solid gray;\n  ${'' /* outline: 2px solid blue; */}\n`;\nexport const FilmImg = styled.img`\n  border-radius: 10px;\n  border: 2px solid gray;\n  margin-right: 20px;\n  padding: 0;\n  width: 250px ${'' /* outline: 2px solid tomato; */};\n`;\nexport const OwerviewWrapper = styled.div`\n  padding: 5px 15px;\n  ${'' /* outline: 2px solid tomato; */}\n  font-size: 18px;\n  font-weight: 400;\n  text-align: justify;\n  line-height: 1.4;\n  border-radius: 6px;\n  background-color: #eceff1;\n`;\n\nexport const LinkWrapper = styled.div`\n  display: flex;\n  padding: 5px 50px;\n  ${'' /* outline: 2px solid tomato; */}\n  gap: 15px;\n  border-bottom: 3px solid gray;\n`;\nexport const Cast = styled.div`\n  display: flex;\n  width: 80px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 4px;\n`;\n\nexport const Reviews = styled.div`\n  display: flex;\n  width: 80px;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid gray;\n  border-radius: 4px;\n  padding: 4px;\n`;\n","import { useEffect, useRef, useState } from 'react';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport { useLocation } from 'react-router-dom';\nimport { fetchMovieById } from '../API/AxiosAPI';\nimport {\n  Container,\n  GoBack,\n  FilmCard,\n  Title,\n  FilmImg,\n  OwerviewWrapper,\n  LinkWrapper,\n  Cast,\n  Reviews,\n} from './MovieDetails.styled';\n\nconst movieImgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  // console.log(movie);\n\n  const location = useLocation();\n  const backLinkHref = useRef(location.state?.from ?? '/movies/:movieId');\n\n  useEffect(() => {\n    fetchMovieById(movieId).then(result => setMovie(result));\n  });\n  if (!movie) {\n    return;\n  }\n\n  return (\n    <Container>\n      <GoBack>\n        <Link\n          style={{\n            textDecoration: 'none',\n            display: 'block',\n            position: 'relative',\n            padding: '6px',\n          }}\n          to={backLinkHref.current}\n        >\n          Go BACK\n        </Link>\n      </GoBack>\n      <Title>{movie.title}</Title>\n      <FilmCard>\n        <FilmImg\n          src={`${movieImgBaseUrl + movie.poster_path}`}\n          alt={movie.title}\n        />\n        <OwerviewWrapper>\n          <p>Overview</p>\n          <p>{movie.overview}</p>\n        </OwerviewWrapper>\n      </FilmCard>\n\n      <LinkWrapper>\n        <Cast>\n          <Link\n            style={{\n              textDecoration: 'none',\n            }}\n            to=\"cast\"\n            state={location.state}\n          >\n            Cast\n          </Link>\n        </Cast>\n        <Reviews>\n          <Link\n            style={{\n              textDecoration: 'none',\n            }}\n            to=\"reviews\"\n            state={location.state}\n          >\n            Reviews\n          </Link>\n        </Reviews>\n      </LinkWrapper>\n      <Outlet />\n    </Container>\n  );\n};\nexport default MovieDetails;\n"],"names":["axios","API_KEY","fetchTrendingMovies","result","data","fetchMovieBySearch","query","results","fetchMovieById","id","fetchReviews","fetchCast","movieId","cast","Container","styled","GoBack","FilmCard","Title","FilmImg","OwerviewWrapper","LinkWrapper","Cast","Reviews","useState","movie","setMovie","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","then","style","textDecoration","display","position","padding","to","current","title","src","poster_path","alt","overview"],"sourceRoot":""}